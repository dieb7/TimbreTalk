Log for Timbre Talk
 This log is kept with the source code and is refined as the source code changes
 providing a human readable summary of the past, present and future of the code
 base. As issues are encountered, they are entered under the Issues: section. As
 they are resolved or things are changed, they are entered under the Updates:
 section. Once they are no longer relavent, they are removed. The repository will
 contain tags or major milestones which delineate these removals so as to serve
 as a signpost in the source code development preventing the accumulation of clutter.

Issues:
 1. when clicking on send and transfer happens error produced:
 	 ecPacketHandler
     error: structure bigger than list: str=14 list=11
 2. Utility Tab should have list of printme's that can be turned on while running
 3. errors should be caught throughout and put into a log either on a tab or a file
    and or printed to launch window. no error should happen without notifying anyone
 4. when the serial port is bombed, the gui should still function. there should be a
    throttle back option to keep sane. perhaps dump to fixed size buffer and have display
    pull from there but don't tie up whole GUI.
 5. shift base over to pyside to resolve any license issues
 6. generalize code base for Timbre Talk and accept plug ins for:
     protocol, pids, cpuids, targets
 7. make it look prettier on Linux, Windows
 9. add collaborative max length negotiations for sfp protocol
 10. revise, update and test all code
 11. file button stays blue after loading file
 12. provide the ability to upload from memory and create an SREC file - leave out
     0xFF sequences. Given start and finish.
 13. Phrases should be able to have delays between characters to interface with slow
     links.
 14. add srecord and intel hex file generator
 16. change copied text to be not blue?
 17. should check to make sure pyserial 2.7 or greater is being used
 18. add parity, size and stopbits to monitor utility
 19. change flow of boot loader so that the received bytes come to the next sequence
     so that it makes a decision to move on or not. Same with timeout.
 21. application should be able to load CPU ids and PIDs perhaps handlers too
 22. application should be able to store preferences which would include pids and cpu ids
 23. reset port buffers when changing ports. and perhaps clear once open.
 24. when garbage comes in, displaying in serial hex is fine but if SFP is running, it hangs
 25. change reboot button to send reboot as a command. 4 execute doesn't cut it.
 26. need to adjust for cpuids with aliases. don't use index but get actual value
 27. It would be nice to have a Frequent Button area - an area where controls could be
     dragged to which is common to all tabs and has a copy of any button dragged there.
     The button would act as the real button. 
 28. The protocol mode should be shown somewhere global and perhaps other serial parameters
     to make it easy to see what operational mode the interface is in
 29. Tab text does not show up in Yosemite as it doesn't fit. Instead it is a letter
     followed by an ellipse.
     - this happens when launching from a terminal window in the retina display only
 30. GUI should be hierarchial and plugable so that projects can add their special parts
     but still be able to get general updates to GUI.
 31. when in buffered IO mode, better editing facilities should be available such as 
     inline editing, front of line, back of line, history with up down cursor
 33. include or exclude panels and tools by detecting presence of code. Such as JTAG in
     pids. If not there then no tool panel.
 34. treat line 0 in terminal window as input only. Output only goes to lines above it.
     This would allow command history and cleaner output to window from target. The prompt
     could even be on the host.
 35. Allow the window to have a title so that when multiple ones are showing they can be
     distinguished.
 36. when adding in support for ethernet, change ping button to IP ping
 37. PIDs should be general classes subclassed by SPIDs. In terms of SPIDs, there should
     be a common set such as suportted or not, read/write; transfer of working parameters
     such as buffer sizes; The MEM... PIDs should be consolodated around memory - include
     flash as well.
 38. File transfer not happening in the background. Nothing can happen when doing a Jam
     Player write file, for example.
 39. Make command line entry the default for text to target. With this mode the text is
     buffered on the host and every line that is sent, is kept and can be accessed using
     the up/down arrows. When in single character mode, this option is disabled.
 40. Detect that Qt is not available and run from the command line in a terminal window.
     Accept command line parameters for all the major features. Also detect if pyserial
     is not installed and recover gracefully. Either run without Qt or exit gracefully.
 41. There is no default cpuids or pids file so it cannot work when freshly downloaded
 42. Also pyqt4 must be downloaded before it can work. Perhaps the user should be helped out.
     Maybe a link to the most recent binary release should be there. There should be a readme.txt.
 43. Either add all standard baud rates or allow user to enter a baudrate.
 44. Add regular expression to text search in main window.
 45. Add detection for linux ports not opening due to user not belonging to dialout group and
     inform then how to fix or fix it for them.
 46. Allow platform specific saving of parameters which includes things like phrases. Check
     out: https://pypi.python.org/pypi/appdirs/1.4.3
 47. Copy and paste all phrases at the same time as 8 lines of text.
 48. Make line length independent of window width. Lines don't get too long but
     choose some length like 255. This way when window width changes, lines will lengthen
     to fit window. By clipping, it avoids superlong lines.
 
Updates:
 1. removed unneccessary files from folder
 2. modified applist to take arguments
 3. added intel hex records to srecord file interpreter and consolodated to one file
 4. added exception hook to catch all those pesky quiet exceptions and make them visible
 5. added textcolors.py to list all text colors on black and white backgrounds
 6. added support for creating binary applications for the three platforms (Mac,
    Windows, Linux). Follow instructions in "pyinstaller scripts.txt".
    8. make it easy to release a binary for windows and mac
 7. Done: 20. need to make bootloader check for file changed on disk
 8. fixed a bug in size for STM32 file not updating when file on disk changed
 9. done:  32. remember target directory in utility pane like transfer pane: selectFile...
 10. factored transfer protocol out and created class hierarchy:
      QObject -> image -> imageTransfer -> jam player, eeprom transfer
 11. added font size adjuster for text window
 12. fixed color of context menu text in terminal window;
     issue 15. fix popup menu in terminal window so it is not blue